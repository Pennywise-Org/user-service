// @generated by protobuf-ts 2.11.1 with parameter client_grpc1,server_grpc1,use_proto_field_name
// @generated from protobuf file "proto/user/v1/user.proto" (package "proto.user.v1", syntax proto3)
// tslint:disable
import { UpdateUserPlanResponse } from "./user";
import { UpdateUserPlanRequest } from "./user";
import type * as grpc from "@grpc/grpc-js";
/**
 * The UserService handles identity-related actions for internal service communication.
 *
 * @generated from protobuf service proto.user.v1.UserService
 */
export interface IUserService extends grpc.UntypedServiceImplementation {
    /**
     * Updates the current plan associated with a user.
     *
     * Typically called by the PlanService when a user subscribes to,
     * upgrades, or cancels a plan.
     *
     * @generated from protobuf rpc: UpdateUserPlan
     */
    updateUserPlan: grpc.handleUnaryCall<UpdateUserPlanRequest, UpdateUserPlanResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service proto.user.v1.UserService.
 *
 * Usage: Implement the interface IUserService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IUserService = ...
 * server.addService(userServiceDefinition, service);
 * ```
 */
export const userServiceDefinition: grpc.ServiceDefinition<IUserService> = {
    updateUserPlan: {
        path: "/proto.user.v1.UserService/UpdateUserPlan",
        originalName: "UpdateUserPlan",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => UpdateUserPlanResponse.fromBinary(bytes),
        requestDeserialize: bytes => UpdateUserPlanRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(UpdateUserPlanResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(UpdateUserPlanRequest.toBinary(value))
    }
};
